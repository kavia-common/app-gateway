{"is_source_file": true, "format": "C++", "description": "This file defines the implementation of the Registry class within the WPEFramework Plugin namespace. It provides methods for loading registry data from a YAML-like formatted file, mapping capabilities and APIs to identifiers, and retrieving capability lists. The core functionality revolves around parsing a configuration file and providing lookup utilities for registry entries.", "external_files": ["Badger/Registry.h"], "external_methods": ["trim", "starts_with", "is_empty_list"], "published": ["Registry::LoadFromFile", "Registry::MapCapabilityToIds", "Registry::MapApiToIds", "Registry::AllCapabilities", "Registry::CapabilitiesFromIds", "Registry::FireboltPermissionsFromIds"], "classes": [{"name": "Registry", "description": "A class that manages registry entries loaded from a YAML-like file, providing methods to load data, perform capability and API lookups, and retrieve capability lists."}, {"name": "RegistryEntry", "description": "A struct representing a single registry entry, including its ID and associated capabilities and APIs."}], "methods": [{"name": "std::unique_ptr<Registry> LoadFromFile(const string & path,string & errorOut)", "description": "Loads registry entries from a specified file, parsing a subset of YAML content to populate the registry entries.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> MapCapabilityToIds(const string & capability,const string & role) const", "description": "Creates a list of registry entry IDs that are associated with a specific capability and role.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> MapApiToIds(const string & api) const", "description": "Finds all registry entry IDs that include a specified API.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> AllCapabilities() const", "description": "Returns a list of all unique capabilities present across all registry entries.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> CapabilitiesFromIds(const std::unordered_set<string> & ids) const", "description": "Given a set of IDs, returns all capabilities associated with those IDs.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> FireboltPermissionsFromIds(const std::unordered_set<string> & ids) const", "description": "Returns the list of IDs as permissions, assuming a direct correspondence.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "string trim(const string & s)", "description": "Utility method to trim whitespace characters from both ends of a string.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "bool starts_with(const string & s,const string & p)", "description": "Utility method to check if a string starts with a specified prefix.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "bool is_empty_list(const string & s)", "description": "Utility method to determine if a string represents an empty list notation.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}], "calls": ["std::getline", "std::find", "std::vector::push_back", "std::string::substr", "std::string::find", "std::set::insert", "std::unordered_set::find"], "search-terms": ["Registry::LoadFromFile", "YAML subset parsing", "capabilities mapping", "API to ID mapping", "permissions list parsing", "registry entries", "RegistryEntry"], "state": 2, "file_id": 48, "knowledge_revision": 110, "git_revision": "5f72cb2651e336c751a5ac763e100158c790b1a1", "revision_history": [{"99": ""}, {"110": "5f72cb2651e336c751a5ac763e100158c790b1a1"}], "ctags": [{"_type": "tag", "name": "AllCapabilities", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::AllCapabilities() const {$/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "() const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "CapabilitiesFromIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::CapabilitiesFromIds(const std::unordered_set<string>& ids) const {$/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "(const std::unordered_set<string> & ids) const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "FireboltPermissionsFromIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::FireboltPermissionsFromIds(const std::unordered_set<string>& ids) /", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "(const std::unordered_set<string> & ids) const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "LoadFromFile", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::unique_ptr<Registry> Registry::LoadFromFile(const string& path, string& errorOut) {$/", "language": "C++", "typeref": "typename:std::unique_ptr<Registry>", "kind": "function", "signature": "(const string & path,string & errorOut)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "MapApiToIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::MapApiToIds(const string& api) const {$/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "(const string & api) const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "MapCapabilityToIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::MapCapabilityToIds(const string& capability, const string& role) c/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "(const string & capability,const string & role) const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "Plugin", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^namespace Plugin {$/", "file": true, "language": "C++", "kind": "namespace", "scope": "WPEFramework", "scopeKind": "namespace"}, {"_type": "tag", "name": "WPEFramework", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^namespace WPEFramework {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "is_empty_list", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^bool Registry::is_empty_list(const string& s) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const string & s)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "starts_with", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^bool Registry::starts_with(const string& s, const string& p) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const string & s,const string & p)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "trim", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^string Registry::trim(const string& s) {$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "(const string & s)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}], "hash": "bb00cf07822858a51550e6d5f61c7ec0", "format-version": 4, "code-base-name": "app-gateway", "filename": "Badger/src/Registry.cpp"}