{"is_source_file": true, "format": "C++", "description": "This file implements the Registry class for managing registry entries, including loading from a file, mapping capabilities and APIs to IDs, and extracting permission sets.", "external_files": ["Badger/Registry.h"], "external_methods": [], "published": ["Registry::LoadFromFile", "Registry::MapCapabilityToIds", "Registry::MapApiToIds", "Registry::AllCapabilities", "Registry::CapabilitiesFromIds", "Registry::FireboltPermissionsFromIds"], "classes": [{"name": "Registry", "description": "A class managing a collection of registry entries, providing methods to load data from files and perform capability/API lookups."}, {"name": "RegistryEntry", "description": "A struct representing individual registry entries with id, capabilities, and API data."}], "methods": [{"name": "std::unique_ptr<Registry> LoadFromFile(const string & path,string & errorOut)", "description": "Loads registry entries from a specified file, parsing a simple YAML-like structure.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> MapCapabilityToIds(const string & capability,const string & role) const", "description": "Returns IDs of entries that match a given capability and role.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> MapApiToIds(const string & api) const", "description": "Retrieves IDs of entries associated with a specific API.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> AllCapabilities() const", "description": "Returns a list of all unique capabilities across entries.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> CapabilitiesFromIds(const std::unordered_set<string> & ids) const", "description": "Returns capabilities associated with a set of IDs.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "std::vector<string> FireboltPermissionsFromIds(const std::unordered_set<string> & ids) const", "description": "Returns permission IDs corresponding to given IDs.", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"name": "bool starts_with(const string & s,const string & p)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class", "description": "unavailable"}, {"name": "string trim(const string & s)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class", "description": "unavailable"}], "calls": ["std::ifstream::good", "std::getline", "std::find", "std::vector::push_back", "std::set::insert", "std::vector::reserve"], "search-terms": ["Registry", "LoadFromFile", "capabilities", "API mappings", "permissions parsing", "RegistryEntry"], "state": 2, "file_id": 48, "knowledge_revision": 99, "git_revision": "", "ctags": [{"_type": "tag", "name": "AllCapabilities", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::AllCapabilities() const {$/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "() const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "CapabilitiesFromIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::CapabilitiesFromIds(const std::unordered_set<string>& ids) const {$/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "(const std::unordered_set<string> & ids) const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "FireboltPermissionsFromIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::FireboltPermissionsFromIds(const std::unordered_set<string>& ids) /", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "(const std::unordered_set<string> & ids) const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "LoadFromFile", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::unique_ptr<Registry> Registry::LoadFromFile(const string& path, string& errorOut) {$/", "language": "C++", "typeref": "typename:std::unique_ptr<Registry>", "kind": "function", "signature": "(const string & path,string & errorOut)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "MapApiToIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::MapApiToIds(const string& api) const {$/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "(const string & api) const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "MapCapabilityToIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^std::vector<string> Registry::MapCapabilityToIds(const string& capability, const string& role) c/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "(const string & capability,const string & role) const", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "Plugin", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^namespace Plugin {$/", "file": true, "language": "C++", "kind": "namespace", "scope": "WPEFramework", "scopeKind": "namespace"}, {"_type": "tag", "name": "WPEFramework", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^namespace WPEFramework {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "starts_with", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^bool Registry::starts_with(const string& s, const string& p) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const string & s,const string & p)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}, {"_type": "tag", "name": "trim", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/Registry.cpp", "pattern": "/^string Registry::trim(const string& s) {$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "(const string & s)", "scope": "WPEFramework::Plugin::Registry", "scopeKind": "class"}], "hash": "9c60eb643ab56ea0296773185e0f562e", "format-version": 4, "code-base-name": "app-gateway", "filename": "Badger/src/Registry.cpp", "revision_history": [{"99": ""}]}