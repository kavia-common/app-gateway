{"is_source_file": true, "format": "C++", "description": "Implementation of the PermissionService class, which manages permission checks, listing capabilities, and granted IDs within the WPEFramework Plugin namespace.", "external_files": ["Badger/PermissionService.h"], "external_methods": ["Badger::PermissionService::MapCapabilityToIds", "Badger::PermissionService::CapabilitiesFromIds", "Badger::PermissionService::FireboltPermissionsFromIds"], "published": ["PermissionService::CheckCapability", "PermissionService::CheckAll", "PermissionService::ListCapabilities", "PermissionService::ListFireboltPermissions", "PermissionService::SetGrantedIds", "PermissionService::GetGrantedIds", "PermissionService::ToLower"], "classes": [{"name": "PermissionService", "description": "Service class managing permission checks, listing capabilities, and granted permission IDs within the plugin namespace."}], "methods": [{"name": "bool CheckCapability(const string & capability,const string & role) const", "description": "Checks if a given role has a specific capability, considering role normalization.", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"name": "std::vector<std::tuple<string,string,bool>> CheckAll(const std::vector<std::pair<string,string>> & items) const", "description": "Checks multiple capability-role pairs and returns their status.", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"name": "std::vector<string> ListCapabilities() const", "description": "Returns a list of capabilities based on granted IDs.", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"name": "std::vector<string> ListFireboltPermissions() const", "description": "Returns a list of Firebolt-specific permissions based on granted IDs.", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"name": "void SetGrantedIds(const std::unordered_set<string> & ids)", "description": "Sets the set of IDs that are granted permissions, with thread safety.", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"name": "std::unordered_set<string> GetGrantedIds() const", "description": "Retrieves the current set of granted permission IDs.", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"name": "string ToLower(const string & s)", "description": "Converts a string to lowercase.", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"name": "PermissionService(const Registry & reg,uint32_t cacheTtlSeconds)", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class", "description": "unavailable"}, {"name": "__anon4862fd0d0102(unsigned char c)", "scope": "WPEFramework::Plugin::PermissionService::ToLower", "scopeKind": "function", "description": "unavailable"}], "calls": ["Badger::PermissionService::MapCapabilityToIds", "Badger::PermissionService::CapabilitiesFromIds", "Badger::PermissionService::FireboltPermissionsFromIds", "std::lock_guard<std::mutex>::lock", "std::transform", "std::tolower"], "search-terms": ["PermissionService", "CheckCapability", "ListCapabilities", "FireboltPermissions", "SetGrantedIds", "GetGrantedIds", "MapCapabilityToIds", "CapabilitiesFromIds", "FireboltPermissionsFromIds", "WPEFramework"], "state": 2, "file_id": 49, "knowledge_revision": 101, "git_revision": "", "ctags": [{"_type": "tag", "name": "CheckAll", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^std::vector<std::tuple<string,string,bool>> PermissionService::CheckAll($/", "language": "C++", "typeref": "typename:std::vector<std::tuple<string,string,bool>>", "kind": "function", "signature": "(const std::vector<std::pair<string,string>> & items) const", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"_type": "tag", "name": "CheckCapability", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^bool PermissionService::CheckCapability(const string& capability, const string& role) const {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const string & capability,const string & role) const", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"_type": "tag", "name": "GetGrantedIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^std::unordered_set<string> PermissionService::GetGrantedIds() const {$/", "language": "C++", "typeref": "typename:std::unordered_set<string>", "kind": "function", "signature": "() const", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"_type": "tag", "name": "ListCapabilities", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^std::vector<string> PermissionService::ListCapabilities() const {$/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "() const", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"_type": "tag", "name": "ListFireboltPermissions", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^std::vector<string> PermissionService::ListFireboltPermissions() const {$/", "language": "C++", "typeref": "typename:std::vector<string>", "kind": "function", "signature": "() const", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"_type": "tag", "name": "PermissionService", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^PermissionService::PermissionService(const Registry& reg, uint32_t cacheTtlSeconds)$/", "language": "C++", "kind": "function", "signature": "(const Registry & reg,uint32_t cacheTtlSeconds)", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"_type": "tag", "name": "Plugin", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^namespace Plugin {$/", "file": true, "language": "C++", "kind": "namespace", "scope": "WPEFramework", "scopeKind": "namespace"}, {"_type": "tag", "name": "SetGrantedIds", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^void PermissionService::SetGrantedIds(const std::unordered_set<string>& ids) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const std::unordered_set<string> & ids)", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"_type": "tag", "name": "ToLower", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^string PermissionService::ToLower(const string& s) {$/", "language": "C++", "typeref": "typename:string", "kind": "function", "signature": "(const string & s)", "scope": "WPEFramework::Plugin::PermissionService", "scopeKind": "class"}, {"_type": "tag", "name": "WPEFramework", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^namespace WPEFramework {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "__anon4862fd0d0102", "path": "/home/kavia/workspace/code-generation/app-gateway/Badger/src/PermissionService.cpp", "pattern": "/^    std::transform(out.begin(), out.end(), out.begin(), [](unsigned char c){ return std::tolower/", "file": true, "language": "C++", "kind": "function", "signature": "(unsigned char c)", "scope": "WPEFramework::Plugin::PermissionService::ToLower", "scopeKind": "function"}], "hash": "bbea9b273b580a7a8e520ff68f6aebe4", "format-version": 4, "code-base-name": "app-gateway", "filename": "Badger/src/PermissionService.cpp", "revision_history": [{"101": ""}]}