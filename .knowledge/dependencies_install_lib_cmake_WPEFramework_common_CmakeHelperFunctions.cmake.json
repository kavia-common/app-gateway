{"is_source_file": true, "format": "CMake", "description": "This file contains CMake functions, macros, and include directives related to build configuration, target management, and package configuration handling. It provides utility functions to handle target dependencies, include directories, compile options, and generate configuration files for use with CMake consumers.", "external_files": ["CMakePackageConfigHelpers"], "external_methods": ["message", "list", "get_target_property", "get_property", "set", "add_library", "install", "find_file", "cmake_parse_arguments", "execute_process", "file"], "published": ["add_element", "_get_default_link_name", "get_if_link_libraries", "get_if_compile_defines", "get_if_compile_options", "get_if_include_dirs", "InstallCMakeConfig", "InstallPackageConfig", "InstallFindModule", "print_properties", "print_target_properties", "semicolon_safe_string", "InstallCompatibleCMakeConfig"], "classes": [], "methods": [{"name": "add_element", "description": "Appends an element to a specified list variable."}, {"name": "_get_default_link_name", "description": "Derives a default link name and location from a library file path, removing system root and prefix removal for standard naming."}, {"name": "get_if_link_libraries", "description": "Retrieves link libraries and directories associated with a specified target, including dependencies."}, {"name": "get_if_compile_defines", "description": "Collects compile definitions (preprocessor macros) from a target and its interface dependencies."}, {"name": "get_if_compile_options", "description": "Gathers compile options configured for a target, including interface options."}, {"name": "get_if_include_dirs", "description": "Compiles a list of include directories for a target, resolving interface dependencies."}, {"name": "InstallCMakeConfig", "description": "Generates and installs CMake configuration files for a target, establishing export targets, version files, and dependencies."}, {"name": "InstallPackageConfig", "description": "Creates and installs a pkg-config style configuration file for a target, including include dirs, compile flags, and linked libraries."}, {"name": "InstallFindModule", "description": "Installs custom CMake module files (*.cmake) from a specified directory, optionally recursing."}, {"name": "print_properties", "description": "Outputs all supported CMake property names."}, {"name": "print_target_properties", "description": "Prints all properties for a specified target."}, {"name": "semicolon_safe_string", "description": "Replaces semicolons in a string with an ASCII unit separator to avoid issues in generated files."}, {"name": "InstallCompatibleCMakeConfig", "description": "Sets up an interface target with specified public headers and links it to an existing target, facilitating legacy compatibility and configuration."}], "search-terms": ["macro(add_element)", "function(_get_default_link_name)", "function(get_if_link_libraries)", "function(get_if_compile_defines)", "function(get_if_compile_options)", "function(get_if_include_dirs)", "function(InstallCMakeConfig)", "function(InstallPackageConfig)", "function(InstallFindModule)", "function(print_properties)", "function(print_target_properties)", "function(semicolon_safe_string)", "function(InstallCompatibleCMakeConfig)"], "state": 2, "file_id": 72, "knowledge_revision": 599, "git_revision": "19b22d4285ae31d1212bd73fafb23be01bd456ba", "hash": "309501d6e05615afe0566517dc8c6853", "format-version": 4, "code-base-name": "app-gateway", "filename": "dependencies/install/lib/cmake/WPEFramework/common/CmakeHelperFunctions.cmake", "revision_history": [{"599": "19b22d4285ae31d1212bd73fafb23be01bd456ba"}]}