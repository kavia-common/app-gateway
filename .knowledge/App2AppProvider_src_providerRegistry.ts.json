{"is_source_file": true, "format": "TypeScript", "description": "This file defines the ProviderRegistry class, which manages mappings between capabilities and their provider entries, allowing registration, unregistration, lookup, and cleanup of providers based on connection IDs.", "external_files": ["./types"], "external_methods": [], "published": ["ProviderRegistry"], "classes": [{"name": "ProviderRegistry", "description": "A class that maintains capability to provider mappings and supports registration, unregistration, lookup, and cleanup operations."}], "methods": [{"name": "register", "description": "Registers or replaces a provider for a given capability with associated appId and connectionId."}, {"name": "unregister", "description": "Unregisters a capability if owned by the specified connectionId."}, {"name": "find", "description": "Finds and returns the ProviderEntry for a given capability if it exists."}, {"name": "cleanupByConnection", "description": "Cleans up all capabilities registered by the specified connectionId, typically invoked when a connection is closed."}], "calls": ["this.capabilityToProvider.set", "this.capabilitiesByConnection.get", "set.add", "this.capabilityToProvider.delete", "this.capabilitiesByConnection.delete"], "search-terms": ["ProviderRegistry", "capabilityToProvider", "capabilitiesByConnection", "register", "unregister", "cleanupByConnection"], "state": 2, "file_id": 5, "knowledge_revision": 25, "git_revision": "084cc88e45a7d0154f69932fcd994e4e1f9262bd", "revision_history": [{"11": ""}, {"25": "084cc88e45a7d0154f69932fcd994e4e1f9262bd"}], "ctags": [{"_type": "tag", "name": "ProviderRegistry", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^export class ProviderRegistry {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "cap", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^    for (const cap of set) {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "capabilityToProvider", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^  private readonly capabilityToProvider = new Map<string, ProviderEntry>();$/", "language": "TypeScript", "kind": "property", "scope": "ProviderRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "connectionId", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^      connectionId,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "entry", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^      const entry = this.capabilityToProvider.get(cap);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "entry", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^    const entry = this.capabilityToProvider.get(capability);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "entry", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^    const entry: ProviderEntry = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "registeredAt", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^      registeredAt: Date.now()$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "set", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^    const set = this.capabilitiesByConnection.get(connectionId) ?? new Set<string>();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "set", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/src/providerRegistry.ts", "pattern": "/^    const set = this.capabilitiesByConnection.get(connectionId);$/", "language": "TypeScript", "kind": "constant"}], "hash": "1d58fa78e94d24ed10cfa3f5a4bf6ed0", "format-version": 4, "code-base-name": "app-gateway", "filename": "App2AppProvider/src/providerRegistry.ts", "fields": [{"name": "private readonly capabilityToProvider = new Map<string, ProviderEntry>();", "scope": "ProviderRegistry", "scopeKind": "class", "description": "unavailable"}]}