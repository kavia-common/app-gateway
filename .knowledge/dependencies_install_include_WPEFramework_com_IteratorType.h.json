{"is_source_file": true, "format": "C++ header", "description": "This file defines a template class 'IteratorType' inside the 'WPEFramework::RPC' namespace. It provides an implementation of an iterator over a container with methods for navigation, access, and modification, supporting different container types and predicate-based filtering.", "external_files": ["list (used in std::list)", "map (used in std::map)"], "external_methods": ["std::copy_if", "std::back_inserter", "ASSERT"], "published": ["IteratorType"], "classes": [{"name": "IteratorType", "description": "A template class implementing an iterator over a container, supporting forward and backward navigation, with various constructors for different container types and predicates."}], "methods": [{"name": "AddRef", "description": "Pure virtual method for reference counting increment."}, {"name": "Release", "description": "Pure virtual method for reference counting decrement."}, {"name": "bool IsValid() const", "description": "Checks if the current iterator position is valid.", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"name": "void Reset(const uint32_t position)", "description": "Resets iterator to a specific position.", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"name": "bool Previous(typename INTERFACE::Element & result)", "description": "Moves the iterator backward and retrieves the previous element.", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"name": "bool Next(typename INTERFACE::Element & result)", "description": "Moves the iterator forward and retrieves the next element.", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"name": "uint32_t Count() const", "description": "Returns the number of elements in the container.", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"name": "INTERFACE::Element Current() const", "description": "Returns the current element pointed to by the iterator.", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"name": "void Add(const typename INTERFACE::Element & element)", "description": "Adds an element to the internal container.", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"name": "IteratorType(INTERFACE * index)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}, {"name": "IteratorType(const CONTAINER & container)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}, {"name": "IteratorType(const CONTAINER & container,PREDICATE predicate)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}, {"name": "IteratorType(const std::map<KEY,VALUE> & container)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}, {"name": "IteratorType(Container && container)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}, {"name": "__anon94429b5f0102(const typename INTERFACE::Element& )", "scope": "WPEFramework::RPC::IteratorType::IteratorType", "scopeKind": "function", "description": "unavailable"}, {"name": "~IteratorType()", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}], "calls": ["std::copy_if", "ASSERT"], "search-terms": ["IteratorType", "template iterator", "WPEFramework RPC iterator", "com/IteratorType.h", "Predicate-based container iterator"], "state": 2, "file_id": 100, "knowledge_revision": 607, "git_revision": "109c1dfb90633a0d26e4a2dab8b8e0fdbf23d975", "ctags": [{"_type": "tag", "name": "Add", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        void Add(const typename INTERFACE::Element& element) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const typename INTERFACE::Element & element)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "Container", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        using Container = typename std::list<typename INTERFACE::Element>;$/", "language": "C++", "typeref": "typename:std::list<typename INTERFACE::Element>", "kind": "typedef", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "Count", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        virtual uint32_t Count() const override$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "function", "signature": "() const", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "Current", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        virtual typename INTERFACE::Element Current() const override$/", "language": "C++", "typeref": "typename:INTERFACE::Element", "kind": "function", "signature": "() const", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "IsValid", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        virtual bool IsValid() const override$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "() const", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "IteratorType", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        IteratorType(INTERFACE* index)$/", "language": "C++", "kind": "function", "signature": "(INTERFACE * index)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "IteratorType", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        IteratorType(const CONTAINER& container)$/", "language": "C++", "kind": "function", "signature": "(const CONTAINER & container)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "IteratorType", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        IteratorType(const CONTAINER& container, PREDICATE predicate)$/", "language": "C++", "kind": "function", "signature": "(const CONTAINER & container,PREDICATE predicate)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "IteratorType", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        IteratorType(const std::map<KEY, VALUE>& container)$/", "language": "C++", "kind": "function", "signature": "(const std::map<KEY,VALUE> & container)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "IteratorType", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        explicit IteratorType(Container&& container)$/", "language": "C++", "kind": "function", "signature": "(Container && container)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "IteratorType", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^    class IteratorType : public INTERFACE {$/", "language": "C++", "kind": "class", "scope": "WPEFramework::RPC", "scopeKind": "namespace"}, {"_type": "tag", "name": "Next", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        virtual bool Next(typename INTERFACE::Element& result) override$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(typename INTERFACE::Element & result)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "Previous", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        virtual bool Previous(typename INTERFACE::Element& result) override$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(typename INTERFACE::Element & result)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "RPC", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^namespace RPC {$/", "language": "C++", "kind": "namespace", "scope": "WPEFramework", "scopeKind": "namespace"}, {"_type": "tag", "name": "Reset", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        virtual void Reset(const uint32_t position) override$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const uint32_t position)", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "WPEFramework", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^namespace WPEFramework {$/", "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "__anon94429b5f0102", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^            std::copy_if(container.begin(), container.end(), std::back_inserter(_container), [](/", "file": true, "language": "C++", "kind": "function", "signature": "(const typename INTERFACE::Element& ) ", "scope": "WPEFramework::RPC::IteratorType::IteratorType", "scopeKind": "function"}, {"_type": "tag", "name": "_container", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        Container _container;$/", "language": "C++", "typeref": "typename:Container", "kind": "member", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "_index", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        mutable uint32_t _index;$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "member", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "_iterator", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        mutable typename Container::iterator _iterator;$/", "language": "C++", "typeref": "typename:Container::iterator", "kind": "member", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}, {"_type": "tag", "name": "~IteratorType", "path": "/home/kavia/workspace/code-generation/app-gateway/dependencies/install/include/WPEFramework/com/IteratorType.h", "pattern": "/^        ~IteratorType()$/", "language": "C++", "kind": "function", "signature": "()", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class"}], "hash": "90b318a223667276deacfdbc9aa4d8fc", "format-version": 4, "code-base-name": "app-gateway", "filename": "dependencies/install/include/WPEFramework/com/IteratorType.h", "fields": [{"name": "Container _container", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}, {"name": "uint32_t _index", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}, {"name": "Container::iterator _iterator", "scope": "WPEFramework::RPC::IteratorType", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"607": "109c1dfb90633a0d26e4a2dab8b8e0fdbf23d975"}]}