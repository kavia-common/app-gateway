{"is_source_file": true, "format": "Rust", "description": "This file is the lib.rs source code for the 'rust-badger' crate, a Rust project implementing a Badger Thunder plugin. It defines module declarations, imports, and a primary struct 'BadgerPlugin' that manages permission services and JSON-RPC handler creation.", "external_files": ["crate::app_gateway::AppGatewayClient", "crate::jsonrpc::{BadgerJsonRpc, JsonRpcHandler}", "crate::launch_delegate::LaunchDelegateClient", "crate::registry::YamlPermissionRegistry", "crate::thor_permission::{PermissionRole, ThorPermissionService}"], "external_methods": ["YamlPermissionRegistry::from_file", "ThorPermissionService::new", "BadgerJsonRpc::new"], "published": ["PermissionRequestResult", "PermissionCheckAllResult", "PermissionGrant", "Role"], "classes": [{"name": "BadgerPlugin", "description": "A bundle that contains permission service dependencies and provides a JSON-RPC handler for interaction."}], "methods": [{"name": "new<Rc: AsRef<str>>( registry_yaml_path: Rc, launch_delegate: Arc<dyn LaunchDelegateClient + Send + Sync>, app_gateway: Arc<dyn AppGatewayClient + Send + Sync>, ) -> anyhow::Result<Self>", "description": "Constructor for BadgerPlugin; initializes permission registry and permission service with provided YAML path and client traits.", "scope": "BadgerPlugin", "scopeKind": "implementation"}, {"name": "jsonrpc_handler(&self) -> JsonRpcHandler", "description": "Returns a JSON-RPC handler instance bound to this plugin.", "scope": "BadgerPlugin", "scopeKind": "implementation"}], "calls": ["YamlPermissionRegistry::from_file", "ThorPermissionService::new", "BadgerJsonRpc::new"], "search-terms": ["BadgerPlugin", "jsonrpc", "permission", "launch_delegate", "app_gateway", "YAML", "registry", "TTL cache", "JSON-RPC", "permissions"], "state": 2, "file_id": 33, "knowledge_revision": 81, "git_revision": "08e1744376bb65c359ab1c6a0645849a94201f0f", "ctags": [{"_type": "tag", "name": "BadgerPlugin", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^impl BadgerPlugin {$/", "language": "Rust", "kind": "implementation"}, {"_type": "tag", "name": "BadgerPlugin", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub struct BadgerPlugin {$/", "language": "Rust", "kind": "struct"}, {"_type": "tag", "name": "app_gateway", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub mod app_gateway;$/", "language": "Rust", "kind": "module"}, {"_type": "tag", "name": "cache", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub mod cache;$/", "language": "Rust", "kind": "module"}, {"_type": "tag", "name": "errors", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub mod errors;$/", "language": "Rust", "kind": "module"}, {"_type": "tag", "name": "jsonrpc", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub mod jsonrpc;$/", "language": "Rust", "kind": "module"}, {"_type": "tag", "name": "jsonrpc_handler", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^    pub fn jsonrpc_handler(&self) -> JsonRpcHandler {$/", "language": "Rust", "kind": "method", "signature": "(&self) -> JsonRpcHandler", "scope": "BadgerPlugin", "scopeKind": "implementation"}, {"_type": "tag", "name": "launch_delegate", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub mod launch_delegate;$/", "language": "Rust", "kind": "module"}, {"_type": "tag", "name": "logging", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub mod logging;$/", "language": "Rust", "kind": "module"}, {"_type": "tag", "name": "new", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^    pub fn new<Rc: AsRef<str>>($/", "language": "Rust", "kind": "method", "signature": "<Rc: AsRef<str>>( registry_yaml_path: Rc, launch_delegate: Arc<dyn LaunchDelegateClient + Send + Sync>, app_gateway: Arc<dyn AppGatewayClient + Send + Sync>, ) -> anyhow::Result<Self>", "scope": "BadgerPlugin", "scopeKind": "implementation"}, {"_type": "tag", "name": "permission_service", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^    permission_service: Arc<ThorPermissionService>,$/", "language": "Rust", "kind": "field", "scope": "BadgerPlugin", "scopeKind": "struct"}, {"_type": "tag", "name": "registry", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub mod registry;$/", "language": "Rust", "kind": "module"}, {"_type": "tag", "name": "thor_permission", "path": "/home/kavia/workspace/code-generation/app-gateway/App2AppProvider/rust-badger/src/lib.rs", "pattern": "/^pub mod thor_permission;$/", "language": "Rust", "kind": "module"}], "hash": "59cf832c338fff385f72aa75dcdb14e3", "format-version": 4, "code-base-name": "app-gateway", "filename": "App2AppProvider/rust-badger/src/lib.rs", "fields": [{"name": "permission_service: Arc<ThorPermissionService>,", "scope": "BadgerPlugin", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"81": "08e1744376bb65c359ab1c6a0645849a94201f0f"}]}